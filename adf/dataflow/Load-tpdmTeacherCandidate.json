{
	"name": "Load-tpdmTeacherCandidate",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Descriptor",
						"type": "DatasetReference"
					},
					"name": "Desc"
				},
				{
					"dataset": {
						"referenceName": "SexDescriptor",
						"type": "DatasetReference"
					},
					"name": "Sex"
				},
				{
					"dataset": {
						"referenceName": "teacherCandidateSource",
						"type": "DatasetReference"
					},
					"name": "teacherCandidateSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "JoinTable",
						"type": "DatasetReference"
					},
					"name": "edfidb"
				}
			],
			"transformations": [
				{
					"name": "joindesc"
				},
				{
					"name": "MapDescriptors"
				},
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "Select1"
				}
			],
			"script": "source(output(\n\t\tDescriptorId as integer,\n\t\tNamespace as string,\n\t\tCodeValue as string,\n\t\tShortDescription as string,\n\t\tDescription as string,\n\t\tPriorDescriptorId as integer,\n\t\tEffectiveBeginDate as date,\n\t\tEffectiveEndDate as date,\n\t\tCreateDate as timestamp,\n\t\tLastModifiedDate as timestamp,\n\t\tId as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Desc\nsource(output(\n\t\tSexDescriptorId as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Sex\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> teacherCandidateSource\nDesc, Sex join(DescriptorId == SexDescriptorId,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joindesc\nMapDrifted1 derive(SexDescriptorCodeValue = iif(Gender=='F', 'Female', iif(Gender == 'M', 'Male', 'Not Selected')),\n\t\tBirthSexDescriptorCodeValue = iif(BirthGender=='F', 'Female', iif(BirthGender == 'M', 'Male', 'Not Selected')),\n\t\tProgramCompleteBit = iif(ProgramComplete == 'Y', 1, iif(ProgramComplete == 'N', 0, toInteger(null()))),\n\t\tFirstGenerationStudentBit = iif(FirstGenerationStudent == 'Y', 1, iif(FirstGenerationStudent == 'N', 0, toInteger(null()))),\n\t\tMiddleName = toString(null())) ~> MapDescriptors\nteacherCandidateSource derive(PersonalTitlePrefix = toString(byName('PersonalTitlePrefix')),\n\t\tFirstName = toString(byName('FirstName')),\n\t\tLastSurname = toString(byName('LastSurname')),\n\t\tGender = toString(byName('Gender')),\n\t\tBirthDate = toDate('BirthDate', 'YYYY-MM-DD'),\n\t\tBirthCity = toString(byName('BirthCity')),\n\t\tBirthState = toString(byName('BirthState')),\n\t\tBirthCountry = toString(byName('BirthCountry')),\n\t\tBirthGender = toString(byName('BirthGender')),\n\t\tHispanicLatinoEthnicity = toString(byName('HispanicLatinoEthnicity')),\n\t\tOldEthnicity = toString(byName('OldEthnicity')),\n\t\tEconomicDisadvantaged = toString(byName('EconomicDisadvantaged')),\n\t\tLimitedEnglish = toString(byName('LimitedEnglish')),\n\t\tLoginId = toString(byName('LoginId')),\n\t\tTuitionCost = toString(byName('TuitionCost')),\n\t\tCareer = toString(byName('Career')),\n\t\tProgramComplete = toString(byName('ProgramComplete')),\n\t\tFirstGenerationStudent = toString(byName('FirstGenerationStudent')),\n\t\tStudentUSI = toString(byName('StudentUSI')),\n\t\tId = toString(byName('Id'))) ~> MapDrifted1\nMapDescriptors select(mapColumn(\n\t\tPersonalTitlePrefix,\n\t\tFirstName,\n\t\tMiddleName,\n\t\tLastSurname,\n\t\tSexDescriptorCodeValue,\n\t\tBirthDate,\n\t\tBirthCity,\n\t\tBirthState,\n\t\tBirthCountry,\n\t\tBirthSexDescriptorCodeValue,\n\t\tHispanicLatinoEthnicity,\n\t\tOldEthnicity,\n\t\tEconomicDisadvantaged,\n\t\tLimitedEnglish,\n\t\tLoginId,\n\t\tTuitionCost,\n\t\tCareer,\n\t\tProgramCompleteBit,\n\t\tFirstGenerationStudentBit,\n\t\tStudentUSI,\n\t\tId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\njoindesc sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> edfidb"
		}
	}
}