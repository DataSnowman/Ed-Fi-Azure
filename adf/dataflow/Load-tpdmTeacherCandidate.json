{
	"name": "Load-tpdmTeacherCandidate",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "teacherCandidateSource",
						"type": "DatasetReference"
					},
					"name": "teacherCandidateSource"
				},
				{
					"dataset": {
						"referenceName": "Descriptor",
						"type": "DatasetReference"
					},
					"name": "SexDescriptorIdSrc"
				},
				{
					"dataset": {
						"referenceName": "Descriptor",
						"type": "DatasetReference"
					},
					"name": "BirthStateAbbreviationDescriptorId"
				},
				{
					"dataset": {
						"referenceName": "Descriptor",
						"type": "DatasetReference"
					},
					"name": "BirthCountryDescriptorId"
				},
				{
					"dataset": {
						"referenceName": "Descriptor",
						"type": "DatasetReference"
					},
					"name": "BirthSexDescriptorId"
				},
				{
					"dataset": {
						"referenceName": "Descriptor",
						"type": "DatasetReference"
					},
					"name": "OldEthnicityDescriptorId"
				},
				{
					"dataset": {
						"referenceName": "Descriptor",
						"type": "DatasetReference"
					},
					"name": "CareerPathwayDescriptorId"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Target",
						"type": "DatasetReference"
					},
					"name": "Target"
				},
				{
					"dataset": {
						"referenceName": "JoinTable",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "JoinTable",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "JoinTable",
						"type": "DatasetReference"
					},
					"name": "sink3"
				},
				{
					"dataset": {
						"referenceName": "JoinTable",
						"type": "DatasetReference"
					},
					"name": "sink4"
				},
				{
					"dataset": {
						"referenceName": "JoinTable",
						"type": "DatasetReference"
					},
					"name": "sink5"
				},
				{
					"dataset": {
						"referenceName": "JoinTable",
						"type": "DatasetReference"
					},
					"name": "sink6"
				}
			],
			"transformations": [
				{
					"name": "MapDescriptors"
				},
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "SelectColumnsPjoin"
				},
				{
					"name": "TeacherCandidateIdentifier"
				}
			],
			"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> teacherCandidateSource\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [DescriptorId]\\n      ,[CodeValue]\\n  FROM [edfi].[Descriptor], [edfi].[SexDescriptor]\\n  WHERE [DescriptorId] = [SexDescriptorId]',\n\tformat: 'query') ~> SexDescriptorIdSrc\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [DescriptorId] as BirthStateAbbreviationDescriptorId\\n      ,[CodeValue]\\n  FROM [edfi].[Descriptor], [edfi].[StateAbbreviationDescriptor]\\n  WHERE [DescriptorId] = [StateAbbreviationDescriptorId]',\n\tformat: 'query') ~> BirthStateAbbreviationDescriptorId\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [DescriptorId] BirthCountryDescriptorId\\n      ,[Description]\\n  FROM [edfi].[Descriptor], [edfi].[CountryDescriptor]\\n  WHERE [DescriptorId] = [CountryDescriptorId]',\n\tformat: 'query') ~> BirthCountryDescriptorId\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [DescriptorId] as BirthSexDescriptorId\\n      ,[CodeValue]\\n  FROM [edfi].[Descriptor], [edfi].[SexDescriptor]\\n  WHERE [DescriptorId] = [SexDescriptorId]',\n\tformat: 'query') ~> BirthSexDescriptorId\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [DescriptorId] as OldEthnicityDescriptorId\\n      ,[CodeValue]\\n  FROM [edfi].[Descriptor], [edfi].[RaceDescriptor]\\n  WHERE [DescriptorId] = [RaceDescriptorId]',\n\tformat: 'query') ~> OldEthnicityDescriptorId\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [DescriptorId] as CareerPathwayDescriptorId\\n      ,[CodeValue]\\n  FROM [edfi].[Descriptor], [edfi].[CareerPathwayDescriptor]\\n  WHERE [DescriptorId] = [CareerPathwayDescriptorId]  ',\n\tformat: 'query') ~> CareerPathwayDescriptorId\nMapDrifted1 derive(SexDescriptorCodeValue = iif(Gender=='F', 'Female', iif(Gender == 'M', 'Male', 'Not Selected')),\n\t\tBirthSexDescriptorCodeValue = iif(BirthGender=='F', 'Female', iif(BirthGender == 'M', 'Male', 'Not Selected')),\n\t\tProgramCompleteBit = iif(ProgramComplete == 'Y', 1, iif(ProgramComplete == 'N', 0, toInteger(null()))),\n\t\tFirstGenerationStudentBit = iif(FirstGenerationStudent == 'Y', 1, iif(FirstGenerationStudent == 'N', 0, toInteger(null()))),\n\t\tMiddleName = toString(null()),\n\t\tGenerationCodeSuffix = toString(null()),\n\t\tMaidenName = toString(null()),\n\t\tBirthDateDate = toDate(BirthDate),\n\t\tBirthInternationalProvince = toString(null()),\n\t\tDateEnteredUS = toDate(''),\n\t\tMultipleBirthStatus = toInteger(null()),\n\t\tProfileThumbnail = toString(null()),\n\t\tCitizenshipStatusDescriptorId = toInteger(null()),\n\t\tDisplacementStatus = toString(null()),\n\t\tGenderDescriptorId = toInteger(null()),\n\t\tEnglishLanguageExamDescriptorId = toInteger(null())) ~> MapDescriptors\nteacherCandidateSource derive(PersonalTitlePrefix = toString(byName('PersonalTitlePrefix')),\n\t\tFirstName = toString(byName('FirstName')),\n\t\tLastSurname = toString(byName('LastSurname')),\n\t\tGender = toString(byName('Gender')),\n\t\tBirthDate = toString(byName('BirthDate')),\n\t\tBirthCity = toString(byName('BirthCity')),\n\t\tBirthState = toString(byName('BirthState')),\n\t\tBirthCountry = toString(byName('BirthCountry')),\n\t\tBirthGender = toString(byName('BirthGender')),\n\t\tHispanicLatinoEthnicity = toString(byName('HispanicLatinoEthnicity')),\n\t\tOldEthnicity = toString(byName('OldEthnicity')),\n\t\tEconomicDisadvantaged = toString(byName('EconomicDisadvantaged')),\n\t\tLimitedEnglish = toString(byName('LimitedEnglish')),\n\t\tLoginId = toString(byName('LoginId')),\n\t\tTuitionCost = toString(byName('TuitionCost')),\n\t\tCareer = toString(byName('Career')),\n\t\tProgramComplete = toString(byName('ProgramComplete')),\n\t\tFirstGenerationStudent = toString(byName('FirstGenerationStudent')),\n\t\tStudentUSI = toString(byName('StudentUSI')),\n\t\tId = toString(byName('Id'))) ~> MapDrifted1\nTeacherCandidateIdentifier select(mapColumn(\n\t\tTeacherCandidateIdentifier,\n\t\tPersonalTitlePrefix,\n\t\tFirstName,\n\t\tMiddleName,\n\t\tLastSurname,\n\t\tGenerationCodeSuffix,\n\t\tMaidenName,\n\t\tSexDescriptorCodeValue,\n\t\tBirthDate = BirthDateDate,\n\t\tBirthCity,\n\t\tBirthState,\n\t\tBirthInternationalProvince,\n\t\tBirthCountry,\n\t\tDateEnteredUS,\n\t\tMultipleBirthStatus,\n\t\tBirthSexDescriptorCodeValue,\n\t\tProfileThumbnail,\n\t\tHispanicLatinoEthnicity,\n\t\tOldEthnicity,\n\t\tCitizenshipStatusDescriptorId,\n\t\tEconomicDisadvantaged,\n\t\tLimitedEnglish,\n\t\tDisplacementStatus,\n\t\tLoginId,\n\t\tGenderDescriptorId,\n\t\tTuitionCost,\n\t\tEnglishLanguageExamDescriptorId,\n\t\tCareer,\n\t\tProgramCompleteBit,\n\t\tFirstGenerationStudentBit,\n\t\tStudentUSI\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumnsPjoin\nMapDescriptors keyGenerate(output(TeacherCandidateIdentifier as long),\n\tstartAt: 1L) ~> TeacherCandidateIdentifier\nSelectColumnsPjoin sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Target\nSexDescriptorIdSrc sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\nBirthStateAbbreviationDescriptorId sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2\nBirthCountryDescriptorId sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink3\nBirthSexDescriptorId sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink4\nOldEthnicityDescriptorId sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink5\nCareerPathwayDescriptorId sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink6"
		}
	}
}