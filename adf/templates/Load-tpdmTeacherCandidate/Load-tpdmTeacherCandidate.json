{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"edfi": {
			"type": "string"
		},
		"edfiDBls": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/runpipline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load-tpdmTeacherCandidate",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Load-tpdmTeacherCandidate",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Load-tpdmTeacherCandidate')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load-tpdmTeacherCandidate')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "teacherCandidateSource",
								"type": "DatasetReference"
							},
							"name": "teacherCandidateSource"
						},
						{
							"dataset": {
								"referenceName": "Descriptor",
								"type": "DatasetReference"
							},
							"name": "SexDescriptorIdSrc"
						},
						{
							"dataset": {
								"referenceName": "Descriptor",
								"type": "DatasetReference"
							},
							"name": "BirthStateAbbreviationDescriptorId"
						},
						{
							"dataset": {
								"referenceName": "Descriptor",
								"type": "DatasetReference"
							},
							"name": "BirthCountryDescriptorId"
						},
						{
							"dataset": {
								"referenceName": "Descriptor",
								"type": "DatasetReference"
							},
							"name": "BirthSexDescriptorId"
						},
						{
							"dataset": {
								"referenceName": "Descriptor",
								"type": "DatasetReference"
							},
							"name": "OldEthnicityDescriptorId"
						},
						{
							"dataset": {
								"referenceName": "Descriptor",
								"type": "DatasetReference"
							},
							"name": "CareerPathwayDescriptorId"
						},
						{
							"dataset": {
								"referenceName": "Descriptor",
								"type": "DatasetReference"
							},
							"name": "LimitedEnglishProficiencyDescriptorId"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TeacherCandidate",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "MapDescriptors"
						},
						{
							"name": "MapDrifted1",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "SelectColumnsPjoin"
						},
						{
							"name": "TeacherCandidateIdentifier"
						},
						{
							"name": "MapDrifted2",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "JoinSexDescriptorId"
						},
						{
							"name": "MapDrifted3",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "JoinBirthStateAbbreviationDescriptorId"
						},
						{
							"name": "MapDrifted4",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "JoinBirthCountryDescriptorId"
						},
						{
							"name": "MapDrifted5",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "JoinBirthSexDescriptorId"
						},
						{
							"name": "MapDrifted6",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "JoinOldEthnicityDescriptorId"
						},
						{
							"name": "MapDrifted7",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "JoinCareerPathwayDescriptorId"
						},
						{
							"name": "SelectJoins"
						},
						{
							"name": "MapDrifted8",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "JoinLimitedEnglishProficiencyDescriptorId"
						},
						{
							"name": "KeytoString"
						}
					],
					"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> teacherCandidateSource\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [DescriptorId] as SexDescriptorId\\n      ,[CodeValue]\\n  FROM [edfi].[Descriptor], [edfi].[SexDescriptor]\\n  WHERE [DescriptorId] = [SexDescriptorId]',\n\tformat: 'query') ~> SexDescriptorIdSrc\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [DescriptorId] as BirthStateAbbreviationDescriptorId\\n      ,[CodeValue]\\n  FROM [edfi].[Descriptor], [edfi].[StateAbbreviationDescriptor]\\n  WHERE [DescriptorId] = [StateAbbreviationDescriptorId]',\n\tformat: 'query') ~> BirthStateAbbreviationDescriptorId\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [DescriptorId] BirthCountryDescriptorId\\n      ,[Description]\\n  FROM [edfi].[Descriptor], [edfi].[CountryDescriptor]\\n  WHERE [DescriptorId] = [CountryDescriptorId]',\n\tformat: 'query') ~> BirthCountryDescriptorId\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [DescriptorId] as BirthSexDescriptorId\\n      ,[CodeValue]\\n  FROM [edfi].[Descriptor], [edfi].[SexDescriptor]\\n  WHERE [DescriptorId] = [SexDescriptorId]',\n\tformat: 'query') ~> BirthSexDescriptorId\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [DescriptorId] as OldEthnicityDescriptorId\\n      ,[CodeValue]\\n  FROM [edfi].[Descriptor], [edfi].[RaceDescriptor]\\n  WHERE [DescriptorId] = [RaceDescriptorId]',\n\tformat: 'query') ~> OldEthnicityDescriptorId\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [DescriptorId] as CareerPathwayDescriptorId\\n      ,[CodeValue]\\n  FROM [edfi].[Descriptor], [edfi].[CareerPathwayDescriptor]\\n  WHERE [DescriptorId] = [CareerPathwayDescriptorId]  ',\n\tformat: 'query') ~> CareerPathwayDescriptorId\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [DescriptorId] as LimitedEnglishProficiencyDescriptorId\\n      ,[CodeValue]\\n  FROM [edfi].[Descriptor], [edfi].[LimitedEnglishProficiencyDescriptor]\\n  WHERE [DescriptorId] = [LimitedEnglishProficiencyDescriptorId] ',\n\tformat: 'query') ~> LimitedEnglishProficiencyDescriptorId\nMapDrifted1 derive(SexDescriptorCodeValue = iif(Gender=='F', 'Female', iif(Gender == 'M', 'Male', 'Not Selected')),\n\t\tBirthSexDescriptorCodeValue = iif(BirthGender=='F', 'Female', iif(BirthGender == 'M', 'Male', 'Not Selected')),\n\t\tProgramCompleteBit = iif(ProgramComplete == 'Y', 1, iif(ProgramComplete == 'N', 0, toInteger(null()))),\n\t\tFirstGenerationStudentBit = iif(FirstGenerationStudent == 'Y', 1, iif(FirstGenerationStudent == 'N', 0, toInteger(null()))),\n\t\tMiddleName = toString(null()),\n\t\tGenerationCodeSuffix = toString(null()),\n\t\tMaidenName = toString(null()),\n\t\tBirthDateDate = toDate(BirthDate),\n\t\tBirthInternationalProvince = toString(null()),\n\t\tDateEnteredUS = toDate(''),\n\t\tMultipleBirthStatus = toBoolean(toString(null())),\n\t\tProfileThumbnail = toString(null()),\n\t\tCitizenshipStatusDescriptorId = toInteger(null()),\n\t\tDisplacementStatus = toString(null()),\n\t\tGenderDescriptorId = toInteger(null()),\n\t\tEnglishLanguageExamDescriptorId = toInteger(null()),\n\t\tHispanicLatinoEthnicityBit = toBoolean(HispanicLatinoEthnicity),\n\t\tEconomicDisadvantagedBit = toBoolean(EconomicDisadvantaged),\n\t\tTuitionCostMoney = toDecimal(TuitionCost),\n\t\tStudentUSIint = toInteger(StudentUSI)) ~> MapDescriptors\nteacherCandidateSource derive(PersonalTitlePrefix = toString(byName('PersonalTitlePrefix')),\n\t\tFirstName = toString(byName('FirstName')),\n\t\tLastSurname = toString(byName('LastSurname')),\n\t\tGender = toString(byName('Gender')),\n\t\tBirthDate = toString(byName('BirthDate')),\n\t\tBirthCity = toString(byName('BirthCity')),\n\t\tBirthState = toString(byName('BirthState')),\n\t\tBirthCountry = toString(byName('BirthCountry')),\n\t\tBirthGender = toString(byName('BirthGender')),\n\t\tHispanicLatinoEthnicity = toString(byName('HispanicLatinoEthnicity')),\n\t\tOldEthnicity = toString(byName('OldEthnicity')),\n\t\tEconomicDisadvantaged = toString(byName('EconomicDisadvantaged')),\n\t\tLimitedEnglish = toString(byName('LimitedEnglish')),\n\t\tLoginId = toString(byName('LoginId')),\n\t\tTuitionCost = toString(byName('TuitionCost')),\n\t\tCareer = toString(byName('Career')),\n\t\tProgramComplete = toString(byName('ProgramComplete')),\n\t\tFirstGenerationStudent = toString(byName('FirstGenerationStudent')),\n\t\tStudentUSI = toString(byName('StudentUSI')),\n\t\tId = toString(byName('Id'))) ~> MapDrifted1\nKeytoString select(mapColumn(\n\t\tTeacherCandidateIdentifier = TeacherCandidateIdentifierString,\n\t\tPersonalTitlePrefix,\n\t\tFirstName,\n\t\tMiddleName,\n\t\tLastSurname,\n\t\tGenerationCodeSuffix,\n\t\tMaidenName,\n\t\tSexDescriptorCodeValue,\n\t\tBirthDate = BirthDateDate,\n\t\tBirthCity,\n\t\tBirthState,\n\t\tBirthInternationalProvince,\n\t\tBirthCountry,\n\t\tDateEnteredUS,\n\t\tMultipleBirthStatus,\n\t\tBirthSexDescriptorCodeValue,\n\t\tProfileThumbnail,\n\t\tHispanicLatinoEthnicity = HispanicLatinoEthnicityBit,\n\t\tOldEthnicity,\n\t\tCitizenshipStatusDescriptorId,\n\t\tEconomicDisadvantaged = EconomicDisadvantagedBit,\n\t\tLimitedEnglish,\n\t\tDisplacementStatus,\n\t\tLoginId,\n\t\tGenderDescriptorId,\n\t\tTuitionCost = TuitionCostMoney,\n\t\tEnglishLanguageExamDescriptorId,\n\t\tCareer,\n\t\tProgramCompleteBit,\n\t\tFirstGenerationStudentBit,\n\t\tStudentUSI = StudentUSIint\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumnsPjoin\nMapDescriptors keyGenerate(output(TeacherCandidateIdentifier as long),\n\tstartAt: 1L) ~> TeacherCandidateIdentifier\nSexDescriptorIdSrc derive(SexDescriptorId = toInteger(byName('SexDescriptorId')),\n\t\tCodeValue = toString(byName('CodeValue'))) ~> MapDrifted2\nSelectColumnsPjoin, MapDrifted2 join(SexDescriptorCodeValue == CodeValue,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSexDescriptorId\nBirthStateAbbreviationDescriptorId derive(BirthStateAbbreviationDescriptorId = toInteger(byName('BirthStateAbbreviationDescriptorId')),\n\t\tCodeValue = toString(byName('CodeValue'))) ~> MapDrifted3\nJoinSexDescriptorId, MapDrifted3 join(BirthState == MapDrifted3@CodeValue,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinBirthStateAbbreviationDescriptorId\nBirthCountryDescriptorId derive(BirthCountryDescriptorId = toInteger(byName('BirthCountryDescriptorId')),\n\t\tDescription = toString(byName('Description'))) ~> MapDrifted4\nJoinBirthStateAbbreviationDescriptorId, MapDrifted4 join(BirthState == Description,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinBirthCountryDescriptorId\nBirthSexDescriptorId derive(BirthSexDescriptorId = toInteger(byName('BirthSexDescriptorId')),\n\t\tCodeValue = toString(byName('CodeValue'))) ~> MapDrifted5\nJoinBirthCountryDescriptorId, MapDrifted5 join(BirthSexDescriptorCodeValue == MapDrifted5@CodeValue,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinBirthSexDescriptorId\nOldEthnicityDescriptorId derive(OldEthnicityDescriptorId = toInteger(byName('OldEthnicityDescriptorId')),\n\t\tCodeValue = toString(byName('CodeValue'))) ~> MapDrifted6\nJoinBirthSexDescriptorId, MapDrifted6 join(OldEthnicity == MapDrifted6@CodeValue,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinOldEthnicityDescriptorId\nCareerPathwayDescriptorId derive(CareerPathwayDescriptorId = toInteger(byName('CareerPathwayDescriptorId')),\n\t\tCodeValue = toString(byName('CodeValue'))) ~> MapDrifted7\nJoinOldEthnicityDescriptorId, MapDrifted7 join(Career == MapDrifted7@CodeValue,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinCareerPathwayDescriptorId\nJoinLimitedEnglishProficiencyDescriptorId select(mapColumn(\n\t\tTeacherCandidateIdentifier,\n\t\tPersonalTitlePrefix,\n\t\tFirstName,\n\t\tMiddleName,\n\t\tLastSurname,\n\t\tGenerationCodeSuffix,\n\t\tMaidenName,\n\t\tSexDescriptorId,\n\t\tBirthDate,\n\t\tBirthCity,\n\t\tBirthStateAbbreviationDescriptorId,\n\t\tBirthInternationalProvince,\n\t\tBirthCountryDescriptorId,\n\t\tDateEnteredUS,\n\t\tMultipleBirthStatus,\n\t\tBirthSexDescriptorId,\n\t\tProfileThumbnail,\n\t\tHispanicLatinoEthnicity,\n\t\tOldEthnicityDescriptorId,\n\t\tCitizenshipStatusDescriptorId,\n\t\tEconomicDisadvantaged,\n\t\tLimitedEnglishProficiencyDescriptorId,\n\t\tDisplacementStatus,\n\t\tLoginId,\n\t\tGenderDescriptorId,\n\t\tTuitionCost,\n\t\tEnglishLanguageExamDescriptorId,\n\t\tCareerPathwayDescriptorId,\n\t\tProgramCompleteBit,\n\t\tFirstGenerationStudentBit,\n\t\tStudentUSI\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectJoins\nLimitedEnglishProficiencyDescriptorId derive(LimitedEnglishProficiencyDescriptorId = toInteger(byName('LimitedEnglishProficiencyDescriptorId')),\n\t\tCodeValue = toString(byName('CodeValue'))) ~> MapDrifted8\nJoinCareerPathwayDescriptorId, MapDrifted8 join(LimitedEnglish == MapDrifted8@CodeValue,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinLimitedEnglishProficiencyDescriptorId\nTeacherCandidateIdentifier derive(TeacherCandidateIdentifierString = toString(TeacherCandidateIdentifier)) ~> KeytoString\nSelectJoins sink(input(\n\t\tTeacherCandidateIdentifier as string,\n\t\tPersonalTitlePrefix as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastSurname as string,\n\t\tGenerationCodeSuffix as string,\n\t\tMaidenName as string,\n\t\tSexDescriptorId as integer,\n\t\tBirthDate as date,\n\t\tBirthCity as string,\n\t\tBirthStateAbbreviationDescriptorId as integer,\n\t\tBirthInternationalProvince as string,\n\t\tBirthCountryDescriptorId as integer,\n\t\tDateEnteredUS as date,\n\t\tMultipleBirthStatus as boolean,\n\t\tBirthSexDescriptorId as integer,\n\t\tProfileThumbnail as string,\n\t\tHispanicLatinoEthnicity as boolean,\n\t\tOldEthnicityDescriptorId as integer,\n\t\tCitizenshipStatusDescriptorId as integer,\n\t\tEconomicDisadvantaged as boolean,\n\t\tLimitedEnglishProficiencyDescriptorId as integer,\n\t\tDisplacementStatus as string,\n\t\tLoginId as string,\n\t\tGenderDescriptorId as integer,\n\t\tTuitionCost as decimal(19,4),\n\t\tEnglishLanguageExamDescriptorId as integer,\n\t\tPreviousCareerDescriptorId as integer,\n\t\tProgramComplete as boolean,\n\t\tFirstGenerationStudent as boolean,\n\t\tStudentUSI as integer,\n\t\tCreateDate as timestamp,\n\t\tLastModifiedDate as timestamp,\n\t\tId as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/teacherCandidateSource')]",
				"[concat(variables('factoryId'), '/datasets/Descriptor')]",
				"[concat(variables('factoryId'), '/datasets/TeacherCandidate')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/teacherCandidateSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('edfi')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "storageSource"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "teacherCandidate.csv",
						"folderPath": "input",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Descriptor')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('edfiDBls')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "edfi"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DescriptorId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Namespace",
						"type": "nvarchar"
					},
					{
						"name": "CodeValue",
						"type": "nvarchar"
					},
					{
						"name": "ShortDescription",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "PriorDescriptorId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EffectiveBeginDate",
						"type": "date"
					},
					{
						"name": "EffectiveEndDate",
						"type": "date"
					},
					{
						"name": "CreateDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LastModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Id",
						"type": "uniqueidentifier"
					}
				],
				"typeProperties": {
					"schema": "edfi",
					"table": "Descriptor"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TeacherCandidate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('edfiDBls')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "tpdm"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TeacherCandidateIdentifier",
						"type": "nvarchar"
					},
					{
						"name": "PersonalTitlePrefix",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastSurname",
						"type": "nvarchar"
					},
					{
						"name": "GenerationCodeSuffix",
						"type": "nvarchar"
					},
					{
						"name": "MaidenName",
						"type": "nvarchar"
					},
					{
						"name": "SexDescriptorId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BirthDate",
						"type": "date"
					},
					{
						"name": "BirthCity",
						"type": "nvarchar"
					},
					{
						"name": "BirthStateAbbreviationDescriptorId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BirthInternationalProvince",
						"type": "nvarchar"
					},
					{
						"name": "BirthCountryDescriptorId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DateEnteredUS",
						"type": "date"
					},
					{
						"name": "MultipleBirthStatus",
						"type": "bit"
					},
					{
						"name": "BirthSexDescriptorId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProfileThumbnail",
						"type": "nvarchar"
					},
					{
						"name": "HispanicLatinoEthnicity",
						"type": "bit"
					},
					{
						"name": "OldEthnicityDescriptorId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CitizenshipStatusDescriptorId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EconomicDisadvantaged",
						"type": "bit"
					},
					{
						"name": "LimitedEnglishProficiencyDescriptorId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DisplacementStatus",
						"type": "nvarchar"
					},
					{
						"name": "LoginId",
						"type": "nvarchar"
					},
					{
						"name": "GenderDescriptorId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TuitionCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "EnglishLanguageExamDescriptorId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PreviousCareerDescriptorId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProgramComplete",
						"type": "bit"
					},
					{
						"name": "FirstGenerationStudent",
						"type": "bit"
					},
					{
						"name": "StudentUSI",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreateDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LastModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Id",
						"type": "uniqueidentifier"
					}
				],
				"typeProperties": {
					"schema": "tpdm",
					"table": "TeacherCandidate"
				}
			},
			"dependsOn": []
		}
	]
}